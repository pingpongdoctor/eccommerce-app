FRONTEND_URL=frontend url
NEXT_PUBLIC_FRONTEND_URL=public frontend url
NEXT_PUBLIC_SANITY_DATASET=get this on sanity server
SANITY_API_READ_TOKEN=use this token to read sanity documents
NEXT_PUBLIC_SANITY_API_READ_WRITE_TOKEN
NEXT_PUBLIC_SANITY_HOOK_SECRET_DELETE_PRODUCT
NEXT_PUBLIC_SANITY_HOOK_SECRET_CREATE_UPDATE_PRODUCT=secret key to create new document using Sanity webhook
DATABASE_URL=database url of postgresql database on Supabase
DIRECT_URL=direct url of postgresql database on Supabase
AUTH0_SECRET=A long secret value used to encrypt the session cookie
AUTH0_BASE_URL=The base URL of your application
AUTH0_ISSUER_BASE_URL=The URL of your Auth0 tenant domain
AUTH0_CLIENT_ID=Your Auth0 application's Client ID
AUTH0_CLIENT_SECRET=Your Auth0 application's Client Secret
AUTH0_CUSTOM_ROLE_CLAIM=name of role claim which is aka a customized key in Auth0 user object
AUTH0_SESSION_AUTO_SAVE=set this to false to avoid the "nextjs-auth0 is attempting to set cookies from a server component" error appears when next.js accesses the token in cached session on server components
SENGRID_API_KEY=sengrid api key
SENGRID_TEMPLATE_ID_WELCOME=email template id
SENGRID_TEMPLATE_ID_PASSWORD_CHANGE=email template id
SENGRID_TEMPLATE_ID_RESET_PASSWORD=email template id
SENGRID_TEMPLATE_ID_ORDER-NOTIFICATION=email template id
ROUTE_API_KEY=api key for nextjs route protection
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=get this on stripe dashboard
STRIPE_SECRET_KEY=get this on stripe dashboard
UPSTASH_REDIS_REST_URL=<YOUR_URL>
UPSTASH_REDIS_REST_TOKEN=<YOUR_TOKEN>
NEXT_PUBLIC_SANITY_API_VERSION=sanity version
PUSHER_APP_ID=taken on pusher platform
PUSHER_KEY=taken on pusher platform
NEXT_PUBLIC_PUSHER_KEY=taken on pusher platform
PUSHER_SECRET=taken on pusher platform
PUSHER_CLUSTER=taken on pusher platform
NEXT_PUBLIC_PUSHER_CLUSTER=taken on pusher platform