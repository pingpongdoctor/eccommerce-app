// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Category{
comestic
supplement
book
jewelry
}

enum Status{
prepare
onTheWay
done
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  auth0Id String @unique
  name  String
  imgUrl String
  products UsersProducts[]
  reviews Review[]
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id    Int     @id @default(autoincrement())
  productId Int
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate:Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate:Cascade)
  content String
  star Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([productId])
}

model Product {
  id        Int     @id @default(autoincrement())
  sanitySlug String @unique
  title     String
  price String
  category Category
  featured Boolean @default(false)
  users UsersProducts[]
  reviews Review[]
  instock Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order{
  id        Int     @id @default(autoincrement())
  fullname String
  email String
  city String
  country String
  line1 String
  line2 String? //line2 can be null
  postal_code String
  state String
  status Status
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate:Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model UsersProducts {
  userId Int
  productId Int
  user User @relation(fields: [userId],references: [id])
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate:Cascade)
  productQuantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId,productId])
  @@index([userId])
  @@index([productId])
}

